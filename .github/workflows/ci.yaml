# CICD using GitHub actions
# hello aditya
name: CI/CD

# Exclude the workflow to run on changes to the helm chart
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go 1.22.5
      uses: actions/setup-go@v2
      with:
        go-version: 1.22.5

    - name: Build
      run: go build -o go-web-app

    - name: Test
      run: go test ./...

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.56.2

  push:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push action
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest

    needs: push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Update tag in Helm chart
      run: |
        sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "adityabharat38@gmail.com"
        git config --global user.name "Aditya Bharat"
        git add helm/go-web-app-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push
# name: ci

# on: [push]

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         go-version: [ '1.22.5']

#     steps:
#       - uses: actions/checkout@v4
#       - name: Setup Go {{ matrix.go-version }} ......re,pved $ as t stoppped it from looking like a comment
#         uses: actions/setup-go@v5
#         with:
#           go-version: {{ matrix.go-version }} .......removed $ from the matrix line
#       # You can test your matrix by printing the current Go version
#       - name: Display Go version
#         run: go version
